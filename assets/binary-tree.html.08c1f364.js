import{r as c,o as u,c as r,a as n,d as a,w as t,F as i,e as l,b as s}from"./app.e5ee52ef.js";import{_ as k}from"./plugin-vue_export-helper.21dcd24c.js";const b={},d=l(`<h1 id="\u4E8C\u53C9\u6811" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u53C9\u6811" aria-hidden="true">#</a> \u4E8C\u53C9\u6811</h1><p>\u4E8C\u53C9\u6811\u7684\u57FA\u672C\u7ED3\u6784\uFF1A</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">TreeNode</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> val<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> left<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> right<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>val <span class="token operator">=</span> val
        self<span class="token punctuation">.</span>left <span class="token operator">=</span> left
        self<span class="token punctuation">.</span>right <span class="token operator">=</span> right
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="_226-\u7FFB\u8F6C\u4E8C\u53C9\u6811" tabindex="-1"><a class="header-anchor" href="#_226-\u7FFB\u8F6C\u4E8C\u53C9\u6811" aria-hidden="true">#</a> 226. \u7FFB\u8F6C\u4E8C\u53C9\u6811</h2>`,4),m={href:"https://leetcode-cn.com/problems/invert-binary-tree/",target:"_blank",rel:"noopener noreferrer"},h=s("LeetCode"),f=s(" \u2B50"),y=n("div",{class:"language-python ext-py line-numbers-mode"},[n("pre",{class:"language-python"},[n("code",null,[n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Solution"),n("span",{class:"token punctuation"},":"),s(`
    `),n("span",{class:"token keyword"},"def"),s(),n("span",{class:"token function"},"invertTree"),n("span",{class:"token punctuation"},"("),s("self"),n("span",{class:"token punctuation"},","),s(" root"),n("span",{class:"token punctuation"},":"),s(" TreeNode"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token operator"},">"),s(" TreeNode"),n("span",{class:"token punctuation"},":"),s(`
        `),n("span",{class:"token keyword"},"if"),s(" root "),n("span",{class:"token keyword"},"is"),s(),n("span",{class:"token boolean"},"None"),n("span",{class:"token punctuation"},":"),s(`
            `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token boolean"},"None"),s(`
        `),n("span",{class:"token comment"},"# \u524D\u5E8F\u9012\u5F52"),s(`
        root`),n("span",{class:"token punctuation"},"."),s("left"),n("span",{class:"token punctuation"},","),s(" root"),n("span",{class:"token punctuation"},"."),s("right "),n("span",{class:"token operator"},"="),s(" root"),n("span",{class:"token punctuation"},"."),s("right"),n("span",{class:"token punctuation"},","),s(" root"),n("span",{class:"token punctuation"},"."),s(`left
        self`),n("span",{class:"token punctuation"},"."),s("invertTree"),n("span",{class:"token punctuation"},"("),s("root"),n("span",{class:"token punctuation"},"."),s("left"),n("span",{class:"token punctuation"},")"),s(`
        self`),n("span",{class:"token punctuation"},"."),s("invertTree"),n("span",{class:"token punctuation"},"("),s("root"),n("span",{class:"token punctuation"},"."),s("right"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token keyword"},"return"),s(` root
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br"),n("span",{class:"line-number"},"9"),n("br")])],-1),_=n("div",{class:"language-python ext-py line-numbers-mode"},[n("pre",{class:"language-python"},[n("code",null,[n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Solution"),n("span",{class:"token punctuation"},":"),s(`
    `),n("span",{class:"token keyword"},"def"),s(),n("span",{class:"token function"},"invertTree"),n("span",{class:"token punctuation"},"("),s("self"),n("span",{class:"token punctuation"},","),s(" root"),n("span",{class:"token punctuation"},":"),s(" TreeNode"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token operator"},">"),s(" TreeNode"),n("span",{class:"token punctuation"},":"),s(`
        `),n("span",{class:"token keyword"},"if"),s(" root "),n("span",{class:"token keyword"},"is"),s(),n("span",{class:"token boolean"},"None"),n("span",{class:"token punctuation"},":"),s(`
            `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token boolean"},"None"),s(`
        `),n("span",{class:"token comment"},"# \u4F7F\u7528\u961F\u5217"),s(`
        queue `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"["),s("root"),n("span",{class:"token punctuation"},"]"),s(`
        `),n("span",{class:"token keyword"},"while"),s(),n("span",{class:"token builtin"},"len"),n("span",{class:"token punctuation"},"("),s("queue"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":"),s(`
            now `),n("span",{class:"token operator"},"="),s(" queue"),n("span",{class:"token punctuation"},"."),s("pop"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
            now`),n("span",{class:"token punctuation"},"."),s("left"),n("span",{class:"token punctuation"},","),s(" now"),n("span",{class:"token punctuation"},"."),s("right "),n("span",{class:"token operator"},"="),s(" now"),n("span",{class:"token punctuation"},"."),s("right"),n("span",{class:"token punctuation"},","),s(" now"),n("span",{class:"token punctuation"},"."),s(`left
            `),n("span",{class:"token keyword"},"if"),s(" now"),n("span",{class:"token punctuation"},"."),s("left"),n("span",{class:"token punctuation"},":"),s(`
                queue`),n("span",{class:"token punctuation"},"."),s("append"),n("span",{class:"token punctuation"},"("),s("now"),n("span",{class:"token punctuation"},"."),s("left"),n("span",{class:"token punctuation"},")"),s(`
            `),n("span",{class:"token keyword"},"if"),s(" now"),n("span",{class:"token punctuation"},"."),s("right"),n("span",{class:"token punctuation"},":"),s(`
                queue`),n("span",{class:"token punctuation"},"."),s("append"),n("span",{class:"token punctuation"},"("),s("now"),n("span",{class:"token punctuation"},"."),s("right"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token keyword"},"return"),s(` root
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br"),n("span",{class:"line-number"},"9"),n("br"),n("span",{class:"line-number"},"10"),n("br"),n("span",{class:"line-number"},"11"),n("br"),n("span",{class:"line-number"},"12"),n("br"),n("span",{class:"line-number"},"13"),n("br"),n("span",{class:"line-number"},"14"),n("br")])],-1),g=n("h2",{id:"_105-\u4ECE\u524D\u5E8F\u4E0E\u4E2D\u5E8F\u904D\u5386\u5E8F\u5217\u6784\u9020\u4E8C\u53C9\u6811",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_105-\u4ECE\u524D\u5E8F\u4E0E\u4E2D\u5E8F\u904D\u5386\u5E8F\u5217\u6784\u9020\u4E8C\u53C9\u6811","aria-hidden":"true"},"#"),s(" 105. \u4ECE\u524D\u5E8F\u4E0E\u4E2D\u5E8F\u904D\u5386\u5E8F\u5217\u6784\u9020\u4E8C\u53C9\u6811")],-1),w={href:"https://leetcode-cn.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal/",target:"_blank",rel:"noopener noreferrer"},v=s("LeetCode"),N=s(" \u2B50\u2B50\u{1F525}"),x=l("<p>\u5F53\u524D\u5E8F\u5217\u4E2D\uFF0C<strong>\u524D\u5E8F\u5E8F\u5217\u7684\u7B2C\u4E00\u4E2A\u5143\u7D20\u4E00\u5B9A\u662F\u5F53\u524D\u7684\u6839\u8282\u70B9</strong>\uFF0C\u5E76<strong>\u5728\u4E2D\u5E8F\u5E8F\u5217\u4E2D\u521A\u597D\u5939\u5728\u5DE6\u53F3\u5B50\u6811\u5E8F\u5217\u4E2D\u95F4</strong>\uFF0C\u56E0\u6B64\u9012\u5F52\u601D\u8DEF\u975E\u5E38\u7B80\u5355\u3002</p><p>\u7EF4\u62A4\u6808\u5219\u76F8\u5BF9\u590D\u6742\uFF0C\u9700\u8981\u5173\u6CE8\u524D\u5E8F\u6307\u9488\u3001\u4E2D\u5E8F\u6307\u9488\u548C\u6808\u5C3E\u6307\u9488\u3002 \u524D\u5E8F\u6307\u9488\u59CB\u7EC8\u5411\u540E\u6E38\u8D70\uFF0C\u4F46\u6BCF\u6B21\u6BD4\u8F83\u7684\u5BF9\u8C61\u662F<strong>\u4E2D\u5E8F\u6307\u9488</strong>\u548C<strong>\u6808\u5C3E\u6307\u9488</strong>\u3002 \u5F53\u4E24\u8005\u6307\u5411\u5143\u7D20\u4E0D\u540C\u65F6\uFF0C\u610F\u5473\u7740<strong>\u524D\u5E8F\u6307\u9488\u6240\u6307\u5143\u7D20</strong>\u5728\u5DE6\u5B50\u6811\u65B9\u5411\u5EF6\u4F38\u3002 \u4E00\u65E6\u4E24\u8005\u6307\u5411\u5143\u7D20\u76F8\u540C\uFF0C\u610F\u5473\u7740<strong>\u524D\u5E8F\u6307\u9488\u6240\u6307\u5143\u7D20</strong>\u5E94\u662F\u67D0\u4E2A\u8282\u70B9\u7684\u53F3\u5B50\u6811\uFF0C\u800C\u8BE5\u8282\u70B9\u4E3A<strong>\u4E2D\u5E8F\u6307\u9488\u4E0D\u65AD\u540E\u79FB</strong>\u548C<strong>\u6808\u5C3E\u6307\u9488\u4E0D\u65AD\u524D\u79FB</strong>\u4E2D\u6700\u540E\u4E00\u4E2A\u76F8\u7B49\u7684\u8282\u70B9\u3002</p>",2),T=n("div",{class:"language-python ext-py line-numbers-mode"},[n("pre",{class:"language-python"},[n("code",null,[n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Solution"),n("span",{class:"token punctuation"},":"),s(`
    `),n("span",{class:"token keyword"},"def"),s(),n("span",{class:"token function"},"buildTree"),n("span",{class:"token punctuation"},"("),s("self"),n("span",{class:"token punctuation"},","),s(" preorder"),n("span",{class:"token punctuation"},":"),s(" List"),n("span",{class:"token punctuation"},"["),n("span",{class:"token builtin"},"int"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(" inorder"),n("span",{class:"token punctuation"},":"),s(" List"),n("span",{class:"token punctuation"},"["),n("span",{class:"token builtin"},"int"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token operator"},">"),s(" TreeNode"),n("span",{class:"token punctuation"},":"),s(`
        `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token keyword"},"not"),s(" preorder"),n("span",{class:"token punctuation"},":"),s(`
            `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token boolean"},"None"),s(`
        `),n("span",{class:"token comment"},"# \u524D\u5E8F\u7684\u7B2C\u4E00\u4E2A\u5143\u7D20\u4E00\u5B9A\u662F\u5F53\u524D\u7684\u6839\u8282\u70B9"),s(`
        root_val `),n("span",{class:"token operator"},"="),s(" preorder"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"]"),s(`
        `),n("span",{class:"token comment"},"# \u627E\u5230\u6839\u8282\u70B9\u5728\u4E2D\u5E8F\u4E2D\u7684\u4F4D\u7F6E"),s(`
        in_ind `),n("span",{class:"token operator"},"="),s(" inorder"),n("span",{class:"token punctuation"},"."),s("index"),n("span",{class:"token punctuation"},"("),s("root_val"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token comment"},"# \u9012\u5F52\u6784\u9020\u5DE6\u53F3\u5B50\u6811"),s(`
        left `),n("span",{class:"token operator"},"="),s(" self"),n("span",{class:"token punctuation"},"."),s("buildTree"),n("span",{class:"token punctuation"},"("),s("preorder"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},":"),s("in_ind "),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(" inorder"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},":"),s("in_ind"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(`
        right `),n("span",{class:"token operator"},"="),s(" self"),n("span",{class:"token punctuation"},"."),s("buildTree"),n("span",{class:"token punctuation"},"("),s("preorder"),n("span",{class:"token punctuation"},"["),s("in_ind "),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},":"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(" inorder"),n("span",{class:"token punctuation"},"["),s("in_ind "),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},":"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token keyword"},"return"),s(" TreeNode"),n("span",{class:"token punctuation"},"("),s("root_val"),n("span",{class:"token punctuation"},","),s(" left"),n("span",{class:"token punctuation"},","),s(" right"),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br"),n("span",{class:"line-number"},"9"),n("br"),n("span",{class:"line-number"},"10"),n("br"),n("span",{class:"line-number"},"11"),n("br"),n("span",{class:"line-number"},"12"),n("br")])],-1),q=n("div",{class:"language-python ext-py line-numbers-mode"},[n("pre",{class:"language-python"},[n("code",null,[n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Solution"),n("span",{class:"token punctuation"},":"),s(`
    `),n("span",{class:"token keyword"},"def"),s(),n("span",{class:"token function"},"buildTree"),n("span",{class:"token punctuation"},"("),s("self"),n("span",{class:"token punctuation"},","),s(" preorder"),n("span",{class:"token punctuation"},":"),s(" List"),n("span",{class:"token punctuation"},"["),n("span",{class:"token builtin"},"int"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(" inorder"),n("span",{class:"token punctuation"},":"),s(" List"),n("span",{class:"token punctuation"},"["),n("span",{class:"token builtin"},"int"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token operator"},">"),s(" TreeNode"),n("span",{class:"token punctuation"},":"),s(`
        `),n("span",{class:"token comment"},"# \u6784\u9020\u6839\u8282\u70B9\u5E76\u5165\u6808"),s(`
        root `),n("span",{class:"token operator"},"="),s(" TreeNode"),n("span",{class:"token punctuation"},"("),s("preorder"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(`
        stack `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"["),s("root"),n("span",{class:"token punctuation"},"]"),s(`
        `),n("span",{class:"token comment"},"# \u4E2D\u5E8F\u6307\u9488\u7684\u521D\u59CB\u5316"),s(`
        in_ind `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),s(`
        `),n("span",{class:"token keyword"},"for"),s(" pre_ind "),n("span",{class:"token keyword"},"in"),s(),n("span",{class:"token builtin"},"range"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token builtin"},"len"),n("span",{class:"token punctuation"},"("),s("preorder"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":"),s(`
            node `),n("span",{class:"token operator"},"="),s(" stack"),n("span",{class:"token punctuation"},"["),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),s(`
            `),n("span",{class:"token keyword"},"if"),s(" node"),n("span",{class:"token punctuation"},"."),s("val "),n("span",{class:"token operator"},"!="),s(" inorder"),n("span",{class:"token punctuation"},"["),s("in_ind"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},":"),s(`
                `),n("span",{class:"token comment"},"# \u6808\u9876\u5143\u7D20\u4E0E\u4E2D\u5E8F\u6307\u9488\u6240\u6307\u503C\u4E0D\u540C\uFF0C\u5C31\u53EF\u4EE5\u6301\u7EED\u6DFB\u52A0\u5230\u5DE6\u5B50\u6811"),s(`
                node`),n("span",{class:"token punctuation"},"."),s("left "),n("span",{class:"token operator"},"="),s(" TreeNode"),n("span",{class:"token punctuation"},"("),s("preorder"),n("span",{class:"token punctuation"},"["),s("pre_ind"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(`
                stack`),n("span",{class:"token punctuation"},"."),s("append"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},"."),s("left"),n("span",{class:"token punctuation"},")"),s(`
            `),n("span",{class:"token keyword"},"else"),n("span",{class:"token punctuation"},":"),s(`
                `),n("span",{class:"token comment"},"# \u6808\u9876\u5143\u7D20\u4E0E\u4E2D\u5E8F\u6307\u9488\u6240\u6307\u503C\u76F8\u540C\uFF0C\u6301\u7EED\u51FA\u6808\u5E76\u5411\u7531\u632A\u52A8\u4E2D\u5E8F\u6307\u9488"),s(`
                `),n("span",{class:"token keyword"},"while"),s(" stack "),n("span",{class:"token keyword"},"and"),s(" stack"),n("span",{class:"token punctuation"},"["),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"."),s("val "),n("span",{class:"token operator"},"=="),s(" inorder"),n("span",{class:"token punctuation"},"["),s("in_ind"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},":"),s(`
                    node `),n("span",{class:"token operator"},"="),s(" stack"),n("span",{class:"token punctuation"},"."),s("pop"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),s(`
                    in_ind `),n("span",{class:"token operator"},"+="),s(),n("span",{class:"token number"},"1"),s(`
                `),n("span",{class:"token comment"},"# \u4E0D\u518D\u76F8\u540C\u65F6\uFF0C\u5E94\u5C06\u5F53\u524D\u503C\u6DFB\u52A0\u5230\u53F3\u5B50\u6811"),s(`
                node`),n("span",{class:"token punctuation"},"."),s("right "),n("span",{class:"token operator"},"="),s(" TreeNode"),n("span",{class:"token punctuation"},"("),s("preorder"),n("span",{class:"token punctuation"},"["),s("pre_ind"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(`
                stack`),n("span",{class:"token punctuation"},"."),s("append"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},"."),s("right"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token keyword"},"return"),s(` root
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br"),n("span",{class:"line-number"},"9"),n("br"),n("span",{class:"line-number"},"10"),n("br"),n("span",{class:"line-number"},"11"),n("br"),n("span",{class:"line-number"},"12"),n("br"),n("span",{class:"line-number"},"13"),n("br"),n("span",{class:"line-number"},"14"),n("br"),n("span",{class:"line-number"},"15"),n("br"),n("span",{class:"line-number"},"16"),n("br"),n("span",{class:"line-number"},"17"),n("br"),n("span",{class:"line-number"},"18"),n("br"),n("span",{class:"line-number"},"19"),n("br"),n("span",{class:"line-number"},"20"),n("br"),n("span",{class:"line-number"},"21"),n("br"),n("span",{class:"line-number"},"22"),n("br")])],-1),L=n("h2",{id:"_106-\u4ECE\u4E2D\u5E8F\u4E0E\u540E\u5E8F\u904D\u5386\u5E8F\u5217\u6784\u9020\u4E8C\u53C9\u6811",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_106-\u4ECE\u4E2D\u5E8F\u4E0E\u540E\u5E8F\u904D\u5386\u5E8F\u5217\u6784\u9020\u4E8C\u53C9\u6811","aria-hidden":"true"},"#"),s(" 106. \u4ECE\u4E2D\u5E8F\u4E0E\u540E\u5E8F\u904D\u5386\u5E8F\u5217\u6784\u9020\u4E8C\u53C9\u6811")],-1),C={href:"https://leetcode-cn.com/problems/construct-binary-tree-from-inorder-and-postorder-traversal/",target:"_blank",rel:"noopener noreferrer"},S=s("LeetCode"),B=s(" \u2B50\u2B50"),O=n("div",{class:"language-python ext-py line-numbers-mode"},[n("pre",{class:"language-python"},[n("code",null,[n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Solution"),n("span",{class:"token punctuation"},":"),s(`
    `),n("span",{class:"token keyword"},"def"),s(),n("span",{class:"token function"},"buildTree"),n("span",{class:"token punctuation"},"("),s("self"),n("span",{class:"token punctuation"},","),s(" inorder"),n("span",{class:"token punctuation"},":"),s(" List"),n("span",{class:"token punctuation"},"["),n("span",{class:"token builtin"},"int"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(" postorder"),n("span",{class:"token punctuation"},":"),s(" List"),n("span",{class:"token punctuation"},"["),n("span",{class:"token builtin"},"int"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token operator"},">"),s(" TreeNode"),n("span",{class:"token punctuation"},":"),s(`
        `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token keyword"},"not"),s(" inorder"),n("span",{class:"token punctuation"},":"),s(`
            `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token boolean"},"None"),s(`
        `),n("span",{class:"token comment"},"# \u540E\u5E8F\u7684\u6700\u540E\u4E00\u4E2A\u5143\u7D20\u4E00\u5B9A\u662F\u5F53\u524D\u7684\u6839\u8282\u70B9"),s(`
        root_val `),n("span",{class:"token operator"},"="),s(" postorder"),n("span",{class:"token punctuation"},"["),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),s(`
        `),n("span",{class:"token comment"},"# \u627E\u5230\u6839\u8282\u70B9\u5728\u4E2D\u5E8F\u4E2D\u7684\u4F4D\u7F6E"),s(`
        in_ind `),n("span",{class:"token operator"},"="),s(" inorder"),n("span",{class:"token punctuation"},"."),s("index"),n("span",{class:"token punctuation"},"("),s("root_val"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token comment"},"# \u9012\u5F52\u6784\u9020\u5DE6\u53F3\u5B50\u6811"),s(`
        left `),n("span",{class:"token operator"},"="),s(" self"),n("span",{class:"token punctuation"},"."),s("buildTree"),n("span",{class:"token punctuation"},"("),s("inorder"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},":"),s("in_ind"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(" postorder"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},":"),s("in_ind"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(`
        right `),n("span",{class:"token operator"},"="),s(" self"),n("span",{class:"token punctuation"},"."),s("buildTree"),n("span",{class:"token punctuation"},"("),s("inorder"),n("span",{class:"token punctuation"},"["),s("in_ind "),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},":"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(" postorder"),n("span",{class:"token punctuation"},"["),s("in_ind"),n("span",{class:"token punctuation"},":"),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token keyword"},"return"),s(" TreeNode"),n("span",{class:"token punctuation"},"("),s("root_val"),n("span",{class:"token punctuation"},","),s(" left"),n("span",{class:"token punctuation"},","),s(" right"),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br"),n("span",{class:"line-number"},"9"),n("br"),n("span",{class:"line-number"},"10"),n("br"),n("span",{class:"line-number"},"11"),n("br"),n("span",{class:"line-number"},"12"),n("br")])],-1),z=n("div",{class:"language-python ext-py line-numbers-mode"},[n("pre",{class:"language-python"},[n("code",null,[n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Solution"),n("span",{class:"token punctuation"},":"),s(`
    `),n("span",{class:"token keyword"},"def"),s(),n("span",{class:"token function"},"buildTree"),n("span",{class:"token punctuation"},"("),s("self"),n("span",{class:"token punctuation"},","),s(" inorder"),n("span",{class:"token punctuation"},":"),s(" List"),n("span",{class:"token punctuation"},"["),n("span",{class:"token builtin"},"int"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(" postorder"),n("span",{class:"token punctuation"},":"),s(" List"),n("span",{class:"token punctuation"},"["),n("span",{class:"token builtin"},"int"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token operator"},">"),s(" TreeNode"),n("span",{class:"token punctuation"},":"),s(`
        `),n("span",{class:"token comment"},"# \u521D\u59CB\u5316\u6808"),s(`
        stack `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"["),s("TreeNode"),n("span",{class:"token punctuation"},"("),s("inorder"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"]"),s(`
        `),n("span",{class:"token comment"},"# \u4E2D\u5E8F\u6307\u9488\u7684\u521D\u59CB\u5316"),s(`
        post_ind `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),s(`
        `),n("span",{class:"token keyword"},"for"),s(" in_ind "),n("span",{class:"token keyword"},"in"),s(),n("span",{class:"token builtin"},"range"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token builtin"},"len"),n("span",{class:"token punctuation"},"("),s("inorder"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":"),s(`
            node `),n("span",{class:"token operator"},"="),s(" stack"),n("span",{class:"token punctuation"},"["),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),s(`
            `),n("span",{class:"token keyword"},"if"),s(" node"),n("span",{class:"token punctuation"},"."),s("val "),n("span",{class:"token operator"},"!="),s(" postorder"),n("span",{class:"token punctuation"},"["),s("post_ind"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},":"),s(`
                `),n("span",{class:"token comment"},"# \u6808\u9876\u5143\u7D20\u4E0E\u4E2D\u5E8F\u6307\u9488\u6240\u6307\u503C\u4E0D\u540C\uFF0C\u5C31\u53EF\u4EE5\u6301\u7EED\u6DFB\u52A0\u5230\u5DE6\u5B50\u6811"),s(`
                node`),n("span",{class:"token punctuation"},"."),s("right "),n("span",{class:"token operator"},"="),s(" TreeNode"),n("span",{class:"token punctuation"},"("),s("inorder"),n("span",{class:"token punctuation"},"["),s("in_ind"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(`
                stack`),n("span",{class:"token punctuation"},"."),s("append"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},"."),s("right"),n("span",{class:"token punctuation"},")"),s(`
            `),n("span",{class:"token keyword"},"else"),n("span",{class:"token punctuation"},":"),s(`
                `),n("span",{class:"token comment"},"# \u6808\u9876\u5143\u7D20\u4E0E\u4E2D\u5E8F\u6307\u9488\u6240\u6307\u503C\u76F8\u540C\uFF0C\u6301\u7EED\u51FA\u6808\u5E76\u5411\u7531\u632A\u52A8\u4E2D\u5E8F\u6307\u9488"),s(`
                `),n("span",{class:"token keyword"},"while"),s(" stack "),n("span",{class:"token keyword"},"and"),s(" stack"),n("span",{class:"token punctuation"},"["),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"."),s("val "),n("span",{class:"token operator"},"=="),s(" postorder"),n("span",{class:"token punctuation"},"["),s("post_ind"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},":"),s(`
                    node `),n("span",{class:"token operator"},"="),s(" stack"),n("span",{class:"token punctuation"},"."),s("pop"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),s(`
                    post_ind `),n("span",{class:"token operator"},"+="),s(),n("span",{class:"token number"},"1"),s(`
                `),n("span",{class:"token comment"},"# \u4E0D\u518D\u76F8\u540C\u65F6\uFF0C\u5E94\u5C06\u5F53\u524D\u503C\u6DFB\u52A0\u5230\u53F3\u5B50\u6811"),s(`
                node `),n("span",{class:"token operator"},"="),s(" TreeNode"),n("span",{class:"token punctuation"},"("),s("inorder"),n("span",{class:"token punctuation"},"["),s("in_ind"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(" node"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token boolean"},"None"),n("span",{class:"token punctuation"},")"),s(`
                `),n("span",{class:"token keyword"},"if"),s(" stack"),n("span",{class:"token punctuation"},":"),s(`
                    stack`),n("span",{class:"token punctuation"},"["),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"."),s("right "),n("span",{class:"token operator"},"="),s(` node
                stack`),n("span",{class:"token punctuation"},"."),s("append"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token keyword"},"return"),s(" stack"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"]"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br"),n("span",{class:"line-number"},"9"),n("br"),n("span",{class:"line-number"},"10"),n("br"),n("span",{class:"line-number"},"11"),n("br"),n("span",{class:"line-number"},"12"),n("br"),n("span",{class:"line-number"},"13"),n("br"),n("span",{class:"line-number"},"14"),n("br"),n("span",{class:"line-number"},"15"),n("br"),n("span",{class:"line-number"},"16"),n("br"),n("span",{class:"line-number"},"17"),n("br"),n("span",{class:"line-number"},"18"),n("br"),n("span",{class:"line-number"},"19"),n("br"),n("span",{class:"line-number"},"20"),n("br"),n("span",{class:"line-number"},"21"),n("br"),n("span",{class:"line-number"},"22"),n("br"),n("span",{class:"line-number"},"23"),n("br")])],-1),G=n("h2",{id:"_652-\u5BFB\u627E\u91CD\u590D\u7684\u5B50\u6811",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_652-\u5BFB\u627E\u91CD\u590D\u7684\u5B50\u6811","aria-hidden":"true"},"#"),s(" 652. \u5BFB\u627E\u91CD\u590D\u7684\u5B50\u6811")],-1),I={href:"https://leetcode-cn.com/problems/find-duplicate-subtrees/",target:"_blank",rel:"noopener noreferrer"},M=s("LeetCode"),V=s(" \u2B50\u2B50"),E=l(`<div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">findDuplicateSubtrees</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> root<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span>TreeNode<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> List<span class="token punctuation">[</span>Optional<span class="token punctuation">[</span>TreeNode<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
        <span class="token keyword">def</span> <span class="token function">traversal</span><span class="token punctuation">(</span>root<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span>TreeNode<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> string<span class="token punctuation">:</span>
            <span class="token keyword">if</span> <span class="token keyword">not</span> root<span class="token punctuation">:</span>
                <span class="token keyword">return</span> <span class="token string">&quot;#&quot;</span>
            left <span class="token operator">=</span> traversal<span class="token punctuation">(</span>root<span class="token punctuation">.</span>left<span class="token punctuation">)</span>
            right <span class="token operator">=</span> traversal<span class="token punctuation">(</span>root<span class="token punctuation">.</span>right<span class="token punctuation">)</span>
            trace <span class="token operator">=</span> <span class="token string">&quot;{},{},{}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>left<span class="token punctuation">,</span> right<span class="token punctuation">,</span> root<span class="token punctuation">.</span>val<span class="token punctuation">)</span>

            count<span class="token punctuation">.</span>setdefault<span class="token punctuation">(</span>trace<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
            count<span class="token punctuation">[</span>trace<span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">1</span>
            <span class="token keyword">if</span> count<span class="token punctuation">[</span>trace<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">:</span>
                result<span class="token punctuation">.</span>append<span class="token punctuation">(</span>root<span class="token punctuation">)</span>
            <span class="token keyword">return</span> trace

        count <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
        result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        traversal<span class="token punctuation">(</span>root<span class="token punctuation">)</span>
        <span class="token keyword">return</span> result
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h2 id="_654-\u6700\u5927\u4E8C\u53C9\u6811" tabindex="-1"><a class="header-anchor" href="#_654-\u6700\u5927\u4E8C\u53C9\u6811" aria-hidden="true">#</a> 654. \u6700\u5927\u4E8C\u53C9\u6811</h2>`,2),j={href:"https://leetcode-cn.com/problems/maximum-binary-tree/",target:"_blank",rel:"noopener noreferrer"},D=s("LeetCode"),F=s(" \u2B50\u2B50"),A=n("p",null,"\u7528\u9012\u5F52\u5F88\u5E38\u89C4\uFF0C\u7528\u6808\u7EF4\u62A4\u6BD4\u8F83\u6709\u610F\u601D\u3002",-1),H=n("div",{class:"language-python ext-py line-numbers-mode"},[n("pre",{class:"language-python"},[n("code",null,[n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Solution"),n("span",{class:"token punctuation"},":"),s(`
    `),n("span",{class:"token keyword"},"def"),s(),n("span",{class:"token function"},"constructMaximumBinaryTree"),n("span",{class:"token punctuation"},"("),s("self"),n("span",{class:"token punctuation"},","),s(" nums"),n("span",{class:"token punctuation"},":"),s(" List"),n("span",{class:"token punctuation"},"["),n("span",{class:"token builtin"},"int"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token operator"},">"),s(" TreeNode"),n("span",{class:"token punctuation"},":"),s(`
        `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token keyword"},"not"),s(" nums"),n("span",{class:"token punctuation"},":"),s(`
            `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token boolean"},"None"),s(`
        val `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token builtin"},"max"),n("span",{class:"token punctuation"},"("),s("nums"),n("span",{class:"token punctuation"},")"),s(`
        ind `),n("span",{class:"token operator"},"="),s(" nums"),n("span",{class:"token punctuation"},"."),s("index"),n("span",{class:"token punctuation"},"("),s("val"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token comment"},"# \u9012\u5F52\u6784\u9020\u5DE6\u53F3"),s(`
        left `),n("span",{class:"token operator"},"="),s(" self"),n("span",{class:"token punctuation"},"."),s("constructMaximumBinaryTree"),n("span",{class:"token punctuation"},"("),s("nums"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},":"),s("ind"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(`
        right `),n("span",{class:"token operator"},"="),s(" self"),n("span",{class:"token punctuation"},"."),s("constructMaximumBinaryTree"),n("span",{class:"token punctuation"},"("),s("nums"),n("span",{class:"token punctuation"},"["),s("ind "),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},":"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token keyword"},"return"),s(" TreeNode"),n("span",{class:"token punctuation"},"("),s("val"),n("span",{class:"token punctuation"},","),s(" left"),n("span",{class:"token punctuation"},","),s(" right"),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br"),n("span",{class:"line-number"},"9"),n("br"),n("span",{class:"line-number"},"10"),n("br")])],-1),J=n("div",{class:"language-python ext-py line-numbers-mode"},[n("pre",{class:"language-python"},[n("code",null,[n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Solution"),n("span",{class:"token punctuation"},":"),s(`
    `),n("span",{class:"token keyword"},"def"),s(),n("span",{class:"token function"},"constructMaximumBinaryTree"),n("span",{class:"token punctuation"},"("),s("self"),n("span",{class:"token punctuation"},","),s(" nums"),n("span",{class:"token punctuation"},":"),s(" List"),n("span",{class:"token punctuation"},"["),n("span",{class:"token builtin"},"int"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token operator"},">"),s(" TreeNode"),n("span",{class:"token punctuation"},":"),s(`
        stack `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(`
        `),n("span",{class:"token keyword"},"for"),s(" n "),n("span",{class:"token keyword"},"in"),s(" nums"),n("span",{class:"token punctuation"},":"),s(`
            node `),n("span",{class:"token operator"},"="),s(" TreeNode"),n("span",{class:"token punctuation"},"("),s("n"),n("span",{class:"token punctuation"},")"),s(`
            `),n("span",{class:"token comment"},"# \u82E5\u6808\u5185\u7684\u6700\u540E\u4E00\u4E2A\u8282\u70B9\u503C\u6BD4\u5F53\u524D\u503C\u5C0F\uFF0C\u5E94\u5C06\u5176\u6682\u65F6\u4F5C\u4E3A\u5DE6\u5B50\u8282\u70B9\uFF0C\u5E76\u7EE7\u7EED\u5F80\u5DE6\u8BD5\u63A2\u6709\u6CA1\u6709\u5176\u7236\u8282\u70B9"),s(`
            `),n("span",{class:"token keyword"},"while"),s(" stack "),n("span",{class:"token keyword"},"and"),s(" stack"),n("span",{class:"token punctuation"},"["),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"."),s("val "),n("span",{class:"token operator"},"<"),s(" n"),n("span",{class:"token punctuation"},":"),s(`
                node`),n("span",{class:"token punctuation"},"."),s("left "),n("span",{class:"token operator"},"="),s(" stack"),n("span",{class:"token punctuation"},"."),s("pop"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
            `),n("span",{class:"token comment"},"# \u82E5\u6808\u4E2D\u5B58\u5728\u4E00\u4E2A\u8282\u70B9\u503C\u6BD4\u5F53\u524D\u503C\u5927\uFF0C\u628A\u5F53\u524D\u8282\u70B9\u4F5C\u4E3A\u5176\u53F3\u5B50\u8282\u70B9"),s(`
            `),n("span",{class:"token keyword"},"if"),s(" stack"),n("span",{class:"token punctuation"},":"),s(`
                stack`),n("span",{class:"token punctuation"},"["),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"."),s("right "),n("span",{class:"token operator"},"="),s(` Node
            `),n("span",{class:"token comment"},"# \u5F53\u524D\u8282\u70B9\u5FC5\u7136\u5165\u6808"),s(`
            stack`),n("span",{class:"token punctuation"},"."),s("append"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token comment"},"# \u6808\u5934\u662F\u6839\u8282\u70B9\uFF0C\u6808\u5185\u5E94\u53EA\u5269\u4E0B\u6811\u7684\u6700\u53F3\u94FE\u8DEF\u4E0A\u7684\u8282\u70B9"),s(`
        `),n("span",{class:"token keyword"},"return"),s(" stack"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"]"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br"),n("span",{class:"line-number"},"9"),n("br"),n("span",{class:"line-number"},"10"),n("br"),n("span",{class:"line-number"},"11"),n("br"),n("span",{class:"line-number"},"12"),n("br"),n("span",{class:"line-number"},"13"),n("br"),n("span",{class:"line-number"},"14"),n("br"),n("span",{class:"line-number"},"15"),n("br")])],-1),K=n("h2",{id:"_114-\u4E8C\u53C9\u6811\u5C55\u5F00\u4E3A\u94FE\u8868",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_114-\u4E8C\u53C9\u6811\u5C55\u5F00\u4E3A\u94FE\u8868","aria-hidden":"true"},"#"),s(" 114. \u4E8C\u53C9\u6811\u5C55\u5F00\u4E3A\u94FE\u8868")],-1),P={href:"https://leetcode-cn.com/problems/flatten-binary-tree-to-linked-list/",target:"_blank",rel:"noopener noreferrer"},Q=s("LeetCode"),R=s(" \u2B50\u2B50"),U=n("div",{class:"language-python ext-py line-numbers-mode"},[n("pre",{class:"language-python"},[n("code",null,[n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Solution"),n("span",{class:"token punctuation"},":"),s(`
    `),n("span",{class:"token keyword"},"def"),s(),n("span",{class:"token function"},"flatten"),n("span",{class:"token punctuation"},"("),s("self"),n("span",{class:"token punctuation"},","),s(" root"),n("span",{class:"token punctuation"},":"),s(" TreeNode"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token boolean"},"None"),n("span",{class:"token punctuation"},":"),s(`
        `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token keyword"},"not"),s(" root"),n("span",{class:"token punctuation"},":"),s(`
            `),n("span",{class:"token keyword"},"return"),s(`
        self`),n("span",{class:"token punctuation"},"."),s("flatten"),n("span",{class:"token punctuation"},"("),s("root"),n("span",{class:"token punctuation"},"."),s("left"),n("span",{class:"token punctuation"},")"),s(`
        self`),n("span",{class:"token punctuation"},"."),s("flatten"),n("span",{class:"token punctuation"},"("),s("root"),n("span",{class:"token punctuation"},"."),s("right"),n("span",{class:"token punctuation"},")"),s(`

        `),n("span",{class:"token comment"},"# \u628A\u5DE6\u5B50\u6811\u632A\u5230\u53F3\u5B50\u6811\u7684\u4F4D\u7F6E\uFF0C\u518D\u628A\u539F\u5148\u7684\u53F3\u5B50\u6811\u62FC\u63A5\u5230\u540E\u9762"),s(`
        `),n("span",{class:"token keyword"},"if"),s(" root"),n("span",{class:"token punctuation"},"."),s("left"),n("span",{class:"token punctuation"},":"),s(`
            right `),n("span",{class:"token operator"},"="),s(" root"),n("span",{class:"token punctuation"},"."),s(`right
            root`),n("span",{class:"token punctuation"},"."),s("left"),n("span",{class:"token punctuation"},","),s(" root"),n("span",{class:"token punctuation"},"."),s("right "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token boolean"},"None"),n("span",{class:"token punctuation"},","),s(" root"),n("span",{class:"token punctuation"},"."),s(`left
            p `),n("span",{class:"token operator"},"="),s(` root
            `),n("span",{class:"token keyword"},"while"),s(" p"),n("span",{class:"token punctuation"},"."),s("right"),n("span",{class:"token punctuation"},":"),s(`
                p `),n("span",{class:"token operator"},"="),s(" p"),n("span",{class:"token punctuation"},"."),s(`right
            p`),n("span",{class:"token punctuation"},"."),s("right "),n("span",{class:"token operator"},"="),s(` right
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br"),n("span",{class:"line-number"},"9"),n("br"),n("span",{class:"line-number"},"10"),n("br"),n("span",{class:"line-number"},"11"),n("br"),n("span",{class:"line-number"},"12"),n("br"),n("span",{class:"line-number"},"13"),n("br"),n("span",{class:"line-number"},"14"),n("br"),n("span",{class:"line-number"},"15"),n("br")])],-1),W=n("div",{class:"language-python ext-py line-numbers-mode"},[n("pre",{class:"language-python"},[n("code",null,[n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Solution"),n("span",{class:"token punctuation"},":"),s(`
    `),n("span",{class:"token keyword"},"def"),s(),n("span",{class:"token function"},"flatten"),n("span",{class:"token punctuation"},"("),s("self"),n("span",{class:"token punctuation"},","),s(" root"),n("span",{class:"token punctuation"},":"),s(" TreeNode"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token boolean"},"None"),n("span",{class:"token punctuation"},":"),s(`
        `),n("span",{class:"token triple-quoted-string string"},`"""
        Do not return anything, modify root in-place instead.
        """`),s(`
        r `),n("span",{class:"token operator"},"="),s(` root
        `),n("span",{class:"token keyword"},"while"),s(" r"),n("span",{class:"token punctuation"},":"),s(`
            `),n("span",{class:"token keyword"},"if"),s(" r"),n("span",{class:"token punctuation"},"."),s("left"),n("span",{class:"token punctuation"},":"),s(`
                p `),n("span",{class:"token operator"},"="),s(" r"),n("span",{class:"token punctuation"},"."),s(`left
                `),n("span",{class:"token keyword"},"while"),s(" p "),n("span",{class:"token keyword"},"and"),s(" p"),n("span",{class:"token punctuation"},"."),s("right"),n("span",{class:"token punctuation"},":"),s(`
                    p `),n("span",{class:"token operator"},"="),s(" p"),n("span",{class:"token punctuation"},"."),s(`right
                p`),n("span",{class:"token punctuation"},"."),s("right "),n("span",{class:"token operator"},"="),s(" r"),n("span",{class:"token punctuation"},"."),s(`right
                r`),n("span",{class:"token punctuation"},"."),s("right "),n("span",{class:"token operator"},"="),s(" r"),n("span",{class:"token punctuation"},"."),s(`left
                r`),n("span",{class:"token punctuation"},"."),s("left "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token boolean"},"None"),s(`
            r `),n("span",{class:"token operator"},"="),s(" r"),n("span",{class:"token punctuation"},"."),s(`right
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br"),n("span",{class:"line-number"},"9"),n("br"),n("span",{class:"line-number"},"10"),n("br"),n("span",{class:"line-number"},"11"),n("br"),n("span",{class:"line-number"},"12"),n("br"),n("span",{class:"line-number"},"13"),n("br"),n("span",{class:"line-number"},"14"),n("br"),n("span",{class:"line-number"},"15"),n("br")])],-1),X=n("h2",{id:"_116-\u586B\u5145\u6BCF\u4E2A\u8282\u70B9\u7684\u4E0B\u4E00\u4E2A\u53F3\u4FA7\u8282\u70B9\u6307\u9488",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_116-\u586B\u5145\u6BCF\u4E2A\u8282\u70B9\u7684\u4E0B\u4E00\u4E2A\u53F3\u4FA7\u8282\u70B9\u6307\u9488","aria-hidden":"true"},"#"),s(" 116. \u586B\u5145\u6BCF\u4E2A\u8282\u70B9\u7684\u4E0B\u4E00\u4E2A\u53F3\u4FA7\u8282\u70B9\u6307\u9488")],-1),Y={href:"https://leetcode-cn.com/problems/populating-next-right-pointers-in-each-node/",target:"_blank",rel:"noopener noreferrer"},Z=s("LeetCode"),$=s(" \u2B50\u2B50"),nn=n("p",null,[s("\u6CE8\u610F\u5F53\u524D\u8282\u70B9\u5C42\u5DF2\u7ECF\u8FDE\u63A5\u597D\uFF0C\u6240\u4EE5 "),n("code",null,"root.right.next = root.next.left"),s("\u3002")],-1),sn=n("div",{class:"language-python ext-py line-numbers-mode"},[n("pre",{class:"language-python"},[n("code",null,[n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Solution"),n("span",{class:"token punctuation"},":"),s(`
    `),n("span",{class:"token keyword"},"def"),s(),n("span",{class:"token function"},"connect"),n("span",{class:"token punctuation"},"("),s("self"),n("span",{class:"token punctuation"},","),s(" root"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token string"},"'Optional[Node]'"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token string"},"'Optional[Node]'"),n("span",{class:"token punctuation"},":"),s(`
        `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token keyword"},"not"),s(" root"),n("span",{class:"token punctuation"},":"),s(`
            `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token boolean"},"None"),s(`
        `),n("span",{class:"token keyword"},"if"),s(" root"),n("span",{class:"token punctuation"},"."),s("left"),n("span",{class:"token punctuation"},":"),s(`
            `),n("span",{class:"token comment"},"# \u5DE6\u53F3\u5B50\u8282\u70B9\u8FDE\u63A5"),s(`
            root`),n("span",{class:"token punctuation"},"."),s("left"),n("span",{class:"token punctuation"},"."),n("span",{class:"token builtin"},"next"),s(),n("span",{class:"token operator"},"="),s(" root"),n("span",{class:"token punctuation"},"."),s(`right
        `),n("span",{class:"token keyword"},"if"),s(" root"),n("span",{class:"token punctuation"},"."),s("right "),n("span",{class:"token keyword"},"and"),s(" root"),n("span",{class:"token punctuation"},"."),n("span",{class:"token builtin"},"next"),n("span",{class:"token punctuation"},":"),s(`
            `),n("span",{class:"token comment"},"# \u53F3\u5B50\u8282\u70B9\u8FDE\u5411\u53F3\u4FA7\u8282\u70B9\u7684\u5DE6\u8282\u70B9"),s(`
            root`),n("span",{class:"token punctuation"},"."),s("right"),n("span",{class:"token punctuation"},"."),n("span",{class:"token builtin"},"next"),s(),n("span",{class:"token operator"},"="),s(" root"),n("span",{class:"token punctuation"},"."),n("span",{class:"token builtin"},"next"),n("span",{class:"token punctuation"},"."),s(`left
        self`),n("span",{class:"token punctuation"},"."),s("connect"),n("span",{class:"token punctuation"},"("),s("root"),n("span",{class:"token punctuation"},"."),s("left"),n("span",{class:"token punctuation"},")"),s(`
        self`),n("span",{class:"token punctuation"},"."),s("connect"),n("span",{class:"token punctuation"},"("),s("root"),n("span",{class:"token punctuation"},"."),s("right"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token keyword"},"return"),s(` root
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br"),n("span",{class:"line-number"},"9"),n("br"),n("span",{class:"line-number"},"10"),n("br"),n("span",{class:"line-number"},"11"),n("br"),n("span",{class:"line-number"},"12"),n("br"),n("span",{class:"line-number"},"13"),n("br")])],-1),an=n("div",{class:"language-python ext-py line-numbers-mode"},[n("pre",{class:"language-python"},[n("code",null,[n("span",{class:"token comment"},"# \u6839\u636E\u9898\u76EE\u7279\u70B9\u4F7F\u7528\u53CC\u6307\u9488\u5FAA\u73AF"),s(`
`),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Solution"),n("span",{class:"token punctuation"},":"),s(`
    `),n("span",{class:"token keyword"},"def"),s(),n("span",{class:"token function"},"connect"),n("span",{class:"token punctuation"},"("),s("self"),n("span",{class:"token punctuation"},","),s(" root"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token string"},"'Optional[Node]'"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token string"},"'Optional[Node]'"),n("span",{class:"token punctuation"},":"),s(`
        p `),n("span",{class:"token operator"},"="),s(` root
        `),n("span",{class:"token comment"},"# p \u59CB\u7EC8\u6307\u5411\u6BCF\u4E00\u884C\u7684\u7B2C\u4E00\u4E2A\u5143\u7D20"),s(`
        `),n("span",{class:"token keyword"},"while"),s(" p"),n("span",{class:"token punctuation"},":"),s(`
            q `),n("span",{class:"token operator"},"="),s(` p
            `),n("span",{class:"token comment"},"# q \u59CB\u7EC8\u5728\u5F53\u524D\u884C\u91CC\u5411\u540E\u904D\u5386"),s(`
            `),n("span",{class:"token keyword"},"while"),s(" q "),n("span",{class:"token keyword"},"and"),s(" q"),n("span",{class:"token punctuation"},"."),s("left"),n("span",{class:"token punctuation"},":"),s(`
                `),n("span",{class:"token comment"},"# \u4FEE\u6539 q \u7684\u5B50\u8282\u70B9\uFF0C\u5B8C\u6210\u4E0B\u4E00\u884C\u7684\u8FDE\u63A5"),s(`
                q`),n("span",{class:"token punctuation"},"."),s("left"),n("span",{class:"token punctuation"},"."),n("span",{class:"token builtin"},"next"),s(),n("span",{class:"token operator"},"="),s(" q"),n("span",{class:"token punctuation"},"."),s(`right
                `),n("span",{class:"token keyword"},"if"),s(" q"),n("span",{class:"token punctuation"},"."),s("right "),n("span",{class:"token keyword"},"and"),s(" q"),n("span",{class:"token punctuation"},"."),n("span",{class:"token builtin"},"next"),n("span",{class:"token punctuation"},":"),s(`
                    q`),n("span",{class:"token punctuation"},"."),s("right"),n("span",{class:"token punctuation"},"."),n("span",{class:"token builtin"},"next"),s(),n("span",{class:"token operator"},"="),s(" q"),n("span",{class:"token punctuation"},"."),n("span",{class:"token builtin"},"next"),n("span",{class:"token punctuation"},"."),s(`left
                q `),n("span",{class:"token operator"},"="),s(" q"),n("span",{class:"token punctuation"},"."),n("span",{class:"token builtin"},"next"),s(`
            p `),n("span",{class:"token operator"},"="),s(" p"),n("span",{class:"token punctuation"},"."),s(`left

        `),n("span",{class:"token keyword"},"return"),s(` root
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br"),n("span",{class:"line-number"},"9"),n("br"),n("span",{class:"line-number"},"10"),n("br"),n("span",{class:"line-number"},"11"),n("br"),n("span",{class:"line-number"},"12"),n("br"),n("span",{class:"line-number"},"13"),n("br"),n("span",{class:"line-number"},"14"),n("br"),n("span",{class:"line-number"},"15"),n("br"),n("span",{class:"line-number"},"16"),n("br"),n("span",{class:"line-number"},"17"),n("br")])],-1),tn=n("h2",{id:"_297-\u4E8C\u53C9\u6811\u7684\u5E8F\u5217\u5316\u4E0E\u53CD\u5E8F\u5217\u5316",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_297-\u4E8C\u53C9\u6811\u7684\u5E8F\u5217\u5316\u4E0E\u53CD\u5E8F\u5217\u5316","aria-hidden":"true"},"#"),s(" 297. \u4E8C\u53C9\u6811\u7684\u5E8F\u5217\u5316\u4E0E\u53CD\u5E8F\u5217\u5316")],-1),en={href:"https://leetcode-cn.com/problems/serialize-and-deserialize-binary-tree/",target:"_blank",rel:"noopener noreferrer"},on=s("LeetCode"),pn=s(" \u2B50\u2B50\u2B50"),cn=n("p",null,"\u8003\u8651\u524D\u4E2D\u540E\u5E8F\u548C\u5C42\u6B21\u8FD9\u51E0\u79CD\u5E38\u89C1\u7684\u904D\u5386\u65B9\u5F0F\u3002 \u5176\u4E2D\u4E2D\u5E8F\u904D\u5386\u53EF\u4EE5\u5B8C\u6210\u5E8F\u5217\u5316\uFF0C\u4F46\u7531\u4E8E\u65E0\u6CD5\u77E5\u6653\u6839\u6240\u5728\u4F4D\u7F6E\uFF0C\u4E0D\u80FD\u5B8C\u6210\u53CD\u5E8F\u5217\u5316\u3002",-1),ln=n("div",{class:"language-python ext-py line-numbers-mode"},[n("pre",{class:"language-python"},[n("code",null,[n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Codec"),n("span",{class:"token punctuation"},":"),s(`
    `),n("span",{class:"token keyword"},"def"),s(),n("span",{class:"token function"},"serialize"),n("span",{class:"token punctuation"},"("),s("self"),n("span",{class:"token punctuation"},","),s(" root"),n("span",{class:"token punctuation"},":"),s(" TreeNode"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token operator"},">"),s(" string"),n("span",{class:"token punctuation"},":"),s(`
        `),n("span",{class:"token keyword"},"def"),s(),n("span",{class:"token function"},"traverse"),n("span",{class:"token punctuation"},"("),s("root"),n("span",{class:"token punctuation"},":"),s(" TreeNode"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":"),s(`
            `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token keyword"},"not"),s(" root"),n("span",{class:"token punctuation"},":"),s(`
                data`),n("span",{class:"token punctuation"},"."),s("append"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"#"'),n("span",{class:"token punctuation"},")"),s(`
            `),n("span",{class:"token keyword"},"else"),n("span",{class:"token punctuation"},":"),s(`
                `),n("span",{class:"token comment"},"# \u6839\u5DE6\u53F3\u5E8F\u5217\u5316"),s(`
                data`),n("span",{class:"token punctuation"},"."),s("append"),n("span",{class:"token punctuation"},"("),n("span",{class:"token builtin"},"str"),n("span",{class:"token punctuation"},"("),s("root"),n("span",{class:"token punctuation"},"."),s("val"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
                traverse`),n("span",{class:"token punctuation"},"("),s("root"),n("span",{class:"token punctuation"},"."),s("left"),n("span",{class:"token punctuation"},")"),s(`
                traverse`),n("span",{class:"token punctuation"},"("),s("root"),n("span",{class:"token punctuation"},"."),s("right"),n("span",{class:"token punctuation"},")"),s(`

        data `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(`
        traverse`),n("span",{class:"token punctuation"},"("),s("root"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token string"},'","'),n("span",{class:"token punctuation"},"."),s("join"),n("span",{class:"token punctuation"},"("),s("data"),n("span",{class:"token punctuation"},")"),s(`


    `),n("span",{class:"token keyword"},"def"),s(),n("span",{class:"token function"},"deserialize"),n("span",{class:"token punctuation"},"("),s("self"),n("span",{class:"token punctuation"},","),s(" data"),n("span",{class:"token punctuation"},":"),s(" string"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token operator"},">"),s(" TreeNode"),n("span",{class:"token punctuation"},":"),s(`
        `),n("span",{class:"token comment"},"# \u7531\u4E8E\u7A7A\u8282\u70B9\u5168\u90E8\u88AB\u6807\u8BB0\uFF0C\u524D\u5E8F\u65F6\u4E0D\u9700\u8981\u8003\u8651\u989D\u5916\u7684\u8282\u70B9\u4F4D\u7F6E\u4FE1\u606F\uFF0C\u4E3A\u7A7A\u65F6\u7F6E None \u5373\u53EF"),s(`
        `),n("span",{class:"token keyword"},"def"),s(),n("span",{class:"token function"},"traverse"),n("span",{class:"token punctuation"},"("),s("data"),n("span",{class:"token punctuation"},":"),s(" string"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token operator"},">"),s(" TreeNode"),n("span",{class:"token punctuation"},":"),s(`
            `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token keyword"},"not"),s(" data"),n("span",{class:"token punctuation"},":"),s(`
                `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token boolean"},"None"),s(`
            `),n("span",{class:"token comment"},"# \u7B2C\u4E00\u4E2A\u5143\u7D20\u4E3A\u5F53\u524D\u6839"),s(`
            val `),n("span",{class:"token operator"},"="),s(" data"),n("span",{class:"token punctuation"},"."),s("pop"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s(`
            `),n("span",{class:"token keyword"},"if"),s(" val "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token string"},'"#"'),n("span",{class:"token punctuation"},":"),s(`
                `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token boolean"},"None"),s(`
            `),n("span",{class:"token keyword"},"else"),n("span",{class:"token punctuation"},":"),s(`
                `),n("span",{class:"token comment"},"# \u6309\u6839\u5DE6\u53F3\u590D\u539F"),s(`
                root `),n("span",{class:"token operator"},"="),s(" TreeNode"),n("span",{class:"token punctuation"},"("),n("span",{class:"token builtin"},"int"),n("span",{class:"token punctuation"},"("),s("val"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
                root`),n("span",{class:"token punctuation"},"."),s("left "),n("span",{class:"token operator"},"="),s(" traverse"),n("span",{class:"token punctuation"},"("),s("data"),n("span",{class:"token punctuation"},")"),s(`
                root`),n("span",{class:"token punctuation"},"."),s("right "),n("span",{class:"token operator"},"="),s(" traverse"),n("span",{class:"token punctuation"},"("),s("data"),n("span",{class:"token punctuation"},")"),s(`
                `),n("span",{class:"token keyword"},"return"),s(` root

        data `),n("span",{class:"token operator"},"="),s(" data"),n("span",{class:"token punctuation"},"."),s("split"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'","'),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token keyword"},"return"),s(" traverse"),n("span",{class:"token punctuation"},"("),s("data"),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br"),n("span",{class:"line-number"},"9"),n("br"),n("span",{class:"line-number"},"10"),n("br"),n("span",{class:"line-number"},"11"),n("br"),n("span",{class:"line-number"},"12"),n("br"),n("span",{class:"line-number"},"13"),n("br"),n("span",{class:"line-number"},"14"),n("br"),n("span",{class:"line-number"},"15"),n("br"),n("span",{class:"line-number"},"16"),n("br"),n("span",{class:"line-number"},"17"),n("br"),n("span",{class:"line-number"},"18"),n("br"),n("span",{class:"line-number"},"19"),n("br"),n("span",{class:"line-number"},"20"),n("br"),n("span",{class:"line-number"},"21"),n("br"),n("span",{class:"line-number"},"22"),n("br"),n("span",{class:"line-number"},"23"),n("br"),n("span",{class:"line-number"},"24"),n("br"),n("span",{class:"line-number"},"25"),n("br"),n("span",{class:"line-number"},"26"),n("br"),n("span",{class:"line-number"},"27"),n("br"),n("span",{class:"line-number"},"28"),n("br"),n("span",{class:"line-number"},"29"),n("br"),n("span",{class:"line-number"},"30"),n("br"),n("span",{class:"line-number"},"31"),n("br"),n("span",{class:"line-number"},"32"),n("br"),n("span",{class:"line-number"},"33"),n("br"),n("span",{class:"line-number"},"34"),n("br")])],-1),un=n("div",{class:"language-python ext-py line-numbers-mode"},[n("pre",{class:"language-python"},[n("code",null,[n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Codec"),n("span",{class:"token punctuation"},":"),s(`
    `),n("span",{class:"token keyword"},"def"),s(),n("span",{class:"token function"},"serialize"),n("span",{class:"token punctuation"},"("),s("self"),n("span",{class:"token punctuation"},","),s(" root"),n("span",{class:"token punctuation"},":"),s(" TreeNode"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token operator"},">"),s(" string"),n("span",{class:"token punctuation"},":"),s(`
        `),n("span",{class:"token keyword"},"def"),s(),n("span",{class:"token function"},"traverse"),n("span",{class:"token punctuation"},"("),s("root"),n("span",{class:"token punctuation"},":"),s(" TreeNode"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":"),s(`
            `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token keyword"},"not"),s(" root"),n("span",{class:"token punctuation"},":"),s(`
                data`),n("span",{class:"token punctuation"},"."),s("append"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"#"'),n("span",{class:"token punctuation"},")"),s(`
            `),n("span",{class:"token keyword"},"else"),n("span",{class:"token punctuation"},":"),s(`
                `),n("span",{class:"token comment"},"# \u5DE6\u53F3\u6839\u5E8F\u5217\u5316"),s(`
                traverse`),n("span",{class:"token punctuation"},"("),s("root"),n("span",{class:"token punctuation"},"."),s("left"),n("span",{class:"token punctuation"},")"),s(`
                traverse`),n("span",{class:"token punctuation"},"("),s("root"),n("span",{class:"token punctuation"},"."),s("right"),n("span",{class:"token punctuation"},")"),s(`
                data`),n("span",{class:"token punctuation"},"."),s("append"),n("span",{class:"token punctuation"},"("),n("span",{class:"token builtin"},"str"),n("span",{class:"token punctuation"},"("),s("root"),n("span",{class:"token punctuation"},"."),s("val"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`

        data `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(`
        traverse`),n("span",{class:"token punctuation"},"("),s("root"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token string"},'","'),n("span",{class:"token punctuation"},"."),s("join"),n("span",{class:"token punctuation"},"("),s("data"),n("span",{class:"token punctuation"},")"),s(`


    `),n("span",{class:"token keyword"},"def"),s(),n("span",{class:"token function"},"deserialize"),n("span",{class:"token punctuation"},"("),s("self"),n("span",{class:"token punctuation"},","),s(" data"),n("span",{class:"token punctuation"},":"),s(" string"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token operator"},">"),s(" TreeNode"),n("span",{class:"token punctuation"},":"),s(`
        `),n("span",{class:"token keyword"},"def"),s(),n("span",{class:"token function"},"traverse"),n("span",{class:"token punctuation"},"("),s("data"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":"),s(`
            `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token keyword"},"not"),s(" data"),n("span",{class:"token punctuation"},":"),s(`
                `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token boolean"},"None"),s(`
            `),n("span",{class:"token comment"},"# \u6700\u540E\u4E00\u4E2A\u5143\u7D20\u4E3A\u5F53\u524D\u6839"),s(`
            val `),n("span",{class:"token operator"},"="),s(" data"),n("span",{class:"token punctuation"},"."),s("pop"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),s(`
            `),n("span",{class:"token keyword"},"if"),s(" val "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token string"},'"#"'),n("span",{class:"token punctuation"},":"),s(`
                `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token boolean"},"None"),s(`
            `),n("span",{class:"token keyword"},"else"),n("span",{class:"token punctuation"},":"),s(`
                `),n("span",{class:"token comment"},"# \u6309\u6839\u53F3\u5DE6\u590D\u539F"),s(`
                root `),n("span",{class:"token operator"},"="),s(" TreeNode"),n("span",{class:"token punctuation"},"("),n("span",{class:"token builtin"},"int"),n("span",{class:"token punctuation"},"("),s("val"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
                root`),n("span",{class:"token punctuation"},"."),s("right "),n("span",{class:"token operator"},"="),s(" traverse"),n("span",{class:"token punctuation"},"("),s("data"),n("span",{class:"token punctuation"},")"),s(`
                root`),n("span",{class:"token punctuation"},"."),s("left "),n("span",{class:"token operator"},"="),s(" traverse"),n("span",{class:"token punctuation"},"("),s("data"),n("span",{class:"token punctuation"},")"),s(`
                `),n("span",{class:"token keyword"},"return"),s(` root

        data `),n("span",{class:"token operator"},"="),s(" data"),n("span",{class:"token punctuation"},"."),s("split"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'","'),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token keyword"},"return"),s(" traverse"),n("span",{class:"token punctuation"},"("),s("data"),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br"),n("span",{class:"line-number"},"9"),n("br"),n("span",{class:"line-number"},"10"),n("br"),n("span",{class:"line-number"},"11"),n("br"),n("span",{class:"line-number"},"12"),n("br"),n("span",{class:"line-number"},"13"),n("br"),n("span",{class:"line-number"},"14"),n("br"),n("span",{class:"line-number"},"15"),n("br"),n("span",{class:"line-number"},"16"),n("br"),n("span",{class:"line-number"},"17"),n("br"),n("span",{class:"line-number"},"18"),n("br"),n("span",{class:"line-number"},"19"),n("br"),n("span",{class:"line-number"},"20"),n("br"),n("span",{class:"line-number"},"21"),n("br"),n("span",{class:"line-number"},"22"),n("br"),n("span",{class:"line-number"},"23"),n("br"),n("span",{class:"line-number"},"24"),n("br"),n("span",{class:"line-number"},"25"),n("br"),n("span",{class:"line-number"},"26"),n("br"),n("span",{class:"line-number"},"27"),n("br"),n("span",{class:"line-number"},"28"),n("br"),n("span",{class:"line-number"},"29"),n("br"),n("span",{class:"line-number"},"30"),n("br"),n("span",{class:"line-number"},"31"),n("br"),n("span",{class:"line-number"},"32"),n("br"),n("span",{class:"line-number"},"33"),n("br")])],-1);function rn(kn,bn){const o=c("ExternalLinkIcon"),e=c("CodeGroupItem"),p=c("CodeGroup");return u(),r(i,null,[d,n("p",null,[n("a",m,[h,a(o)]),f]),a(p,null,{default:t(()=>[a(e,{title:"\u9012\u5F52"},{default:t(()=>[y]),_:1}),a(e,{title:"\u8FED\u4EE3"},{default:t(()=>[_]),_:1})]),_:1}),g,n("p",null,[n("a",w,[v,a(o)]),N]),x,a(p,null,{default:t(()=>[a(e,{title:"\u9012\u5F52"},{default:t(()=>[T]),_:1}),a(e,{title:"\u8FED\u4EE3"},{default:t(()=>[q]),_:1})]),_:1}),L,n("p",null,[n("a",C,[S,a(o)]),B]),a(p,null,{default:t(()=>[a(e,{title:"\u9012\u5F52"},{default:t(()=>[O]),_:1}),a(e,{title:"\u8FED\u4EE3"},{default:t(()=>[z]),_:1})]),_:1}),G,n("p",null,[n("a",I,[M,a(o)]),V]),E,n("p",null,[n("a",j,[D,a(o)]),F]),A,a(p,null,{default:t(()=>[a(e,{title:"\u9012\u5F52"},{default:t(()=>[H]),_:1}),a(e,{title:"\u8FED\u4EE3"},{default:t(()=>[J]),_:1})]),_:1}),K,n("p",null,[n("a",P,[Q,a(o)]),R]),a(p,null,{default:t(()=>[a(e,{title:"\u9012\u5F52"},{default:t(()=>[U]),_:1}),a(e,{title:"\u8FED\u4EE3"},{default:t(()=>[W]),_:1})]),_:1}),X,n("p",null,[n("a",Y,[Z,a(o)]),$]),nn,a(p,null,{default:t(()=>[a(e,{title:"\u9012\u5F52"},{default:t(()=>[sn]),_:1}),a(e,{title:"\u8FED\u4EE3"},{default:t(()=>[an]),_:1})]),_:1}),tn,n("p",null,[n("a",en,[on,a(o)]),pn]),cn,a(p,null,{default:t(()=>[a(e,{title:"\u524D\u5E8F\u904D\u5386"},{default:t(()=>[ln]),_:1}),a(e,{title:"\u540E\u5E8F\u904D\u5386"},{default:t(()=>[un]),_:1})]),_:1})],64)}var hn=k(b,[["render",rn]]);export{hn as default};
